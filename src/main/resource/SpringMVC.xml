<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 配置视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 使用前缀和后缀 :在Controller中设置视图名的时候会自动加上前缀和后缀。-->
        <property name="prefix" value="/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

    <!--Controller配置: 自动扫描方式，扫描包下面所有的Controller，可以使用注解来指定访问路径-->
    <!-- 使用组件扫描的方式可以一次扫描多个Controller -->
    <context:component-scan base-package="controller"/>

    <!--也可以使用单个的配置方式，需要指定Controller的全限定名
    <bean name="/queryUser.action" class="com.wxisme.ssm.controller.Controller1"/>-->

    <!--配置处理器适配器和处理器映射器-->
    <!--方法1: 注解驱动-->
    <mvc:annotation-driven conversion-service="conversionService"></mvc:annotation-driven>
    <!--方法2: 注解的处理器适配器
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/>
     注解的处理器映射器
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/> -->

    <mvc:interceptors>
        <!-- 直接定义拦截所有请求 -->
        <bean class="com.wxisme."></bean>
        <!-- <mvc:interceptor>
            拦截所有路径的请求   包括子路径
            <mvc:mapping path="/**"/>
            <bean class="com.wxisme.ssm.interceptor.IdentityInterceptor"></bean>
        </mvc:interceptor> -->
    </mvc:interceptors>

    <!-- 定义全局异常处理器 -->
    <!-- 只有一个全局异常处理器起作用 -->
    <bean id="exceptionResolver" class="com.wxisme.ssm.exception.OverallExceptionResolver"></bean>

    <!--配置上传文件数据解析器 :在上传文件时需要配置 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize">
            <value>9242880</value>
        </property>
    </bean>

    <!-- 自定义参数类型绑定 -->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <list>
                <!-- 日期类型绑定 -->
                <bean class="com.wxisme.ssm.controller.converter.DateConverter"/>
            </list>
        </property>
    </bean>

    <!--
    上面提到过如果在配置前端控制器时拦截了所有的请求，不做特殊处理就会导致部分静态资源无法使用。
    如果是这种情况就可以使用下面的配置来访问静态资源文件。
    <mvc:resources mapping="/images/**" location="/images/" />
    <mvc:resources mapping="/css/**" location="/css/" />
    <mvc:resources mapping="/js/**" location="/js/" />
    <mvc:resources mapping="/imgdata/**" location="/imgdata/" />

    也可以使用默认，但是需要在web.xml中配置。
    <! 访问静态资源文件 -->
    <!-- <mvc:default-servlet-handler/> 需要在web.xml中配置-->

    -->
</beans>